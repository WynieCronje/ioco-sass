@use 'sass:color' as color;
@use 'sass:math' as math;
@use 'sass:list' as list;
@use '../../constants/channel-values.scss' as const;

$lightContrast: white !default;
$darkContrast: black !default;

@function contrast-of-color($color) {
  $lightContrastResult: _contrast($color, $lightContrast);
  $darkContrastResult: _contrast($color, $darkContrast);

  @if ($lightContrastResult > $darkContrastResult) {
    @return $lightContrast;
  } @else {
    @return $darkContrast;
  }
}

//#region Privates

@function _luminance($color) {
  $red: list.nth(const.$linear-channel-values, color.red($color) + 1);
  $green: list.nth(const.$linear-channel-values, color.green($color) + 1);
  $blue: list.nth(const.$linear-channel-values, color.blue($color) + 1);

  @return calc(0.2126 * $red) + calc(0.7152 * $green) + calc(0.0722 * $blue);
}

@function _contrast($back, $front) {
  $backLum: _luminance($back) + 0.05;
  $foreLum: _luminance($front) + 0.05;

  @return calc(math.max($backLum, $foreLum) / math.min($backLum, $foreLum));
}

//#endregion
